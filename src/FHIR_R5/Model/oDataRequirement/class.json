{
	"classtype": "kObjectclass",
	"internalversion": 3,
	"superclass": "fhir.FHIRBaseElement",
	"designtaskname": "",
	"cvardefs": [
		{
			"name": "cElements",
			"order": 1,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "cElementsInited",
			"order": 2,
			"type": "kBoolean",
			"subtype": 0,
			"sublen": 0
		}
	],
	"ivardefs": [
		{
			"name": "codeFilter",
			"order": 6,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "codeFilter.code",
			"order": 11,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "codeFilter.code_",
			"order": 12,
			"type": "kObjectref",
			"subtype": "oCoding",
			"sublen": 0,
			"desc": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, t"
		},
		{
			"name": "codeFilter.path",
			"order": 8,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers ("
		},
		{
			"name": "codeFilter.searchParam",
			"order": 9,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept."
		},
		{
			"name": "codeFilter.valueSet",
			"order": 10,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valuese"
		},
		{
			"name": "codeFilter_",
			"order": 7,
			"type": "kObjectref",
			"subtype": "oElement",
			"sublen": 0,
			"desc": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed."
		},
		{
			"name": "dateFilter",
			"order": 13,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "dateFilter.path",
			"order": 15,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers ("
		},
		{
			"name": "dateFilter.searchParam",
			"order": 16,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing."
		},
		{
			"name": "dateFilter_",
			"order": 14,
			"type": "kObjectref",
			"subtype": "oElement",
			"sublen": 0,
			"desc": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed."
		},
		{
			"name": "limit",
			"order": 17,
			"type": "kInteger",
			"subtype": "k32bitint",
			"sublen": 0,
			"desc": "Specifies a maximum number of results that are required (uses the _count search parameter)."
		},
		{
			"name": "mustSupport",
			"order": 4,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "mustSupport_",
			"order": 5,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming sys"
		},
		{
			"name": "profile",
			"order": 2,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "profile_",
			"order": 3,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The profile of the required data, specified as the uri of the profile definition."
		},
		{
			"name": "sort",
			"order": 18,
			"type": "kList",
			"subtype": "",
			"sublen": 0
		},
		{
			"name": "sort.direction",
			"order": 21,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The direction of the sort, ascending or descending."
		},
		{
			"name": "sort.path",
			"order": 20,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that"
		},
		{
			"name": "sort_",
			"order": 19,
			"type": "kObjectref",
			"subtype": "oElement",
			"sublen": 0,
			"desc": "Specifies the order of the results to be returned."
		},
		{
			"name": "type",
			"order": 1,
			"type": "kCharacter",
			"subtype": "kSimplechar",
			"sublen": 100000000,
			"desc": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
		}
	],
	"properties": {
		"collectperformancedata": false,
		"componenticon": 0,
		"componenttype": "kCompStoreHidden",
		"createdate": "2020-06-01 17:44:31",
		"desc": "Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
		"editor": "",
		"editordata": "",
		"external": true,
		"issupercomponent": false,
		"moddate": "2020-06-01 17:57:27",
		"selfcontained": false,
		"showascheckedout": false,
		"userinfo": "",
		"version": ""
	}
}
