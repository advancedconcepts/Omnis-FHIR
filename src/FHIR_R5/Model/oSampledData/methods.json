[
	{
		"name": "$resourceType",
		"ident": 0,
		"order": 1,
		"desc": "Returns the FHIR type name for this instance",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$metadata",
		"ident": 1,
		"order": 2,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$setupMetadata",
		"ident": 2,
		"order": 3,
		"pvardefs": [
			{
				"name": "pElements",
				"order": 1,
				"type": "kFieldreference",
				"subtype": 0,
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$construct",
		"ident": 3,
		"order": 4,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$copyFrom",
		"ident": 4,
		"order": 5,
		"pvardefs": [

		],
		"lvardefs": [
			{
				"name": "itemRef",
				"order": 2,
				"type": "kItemref",
				"subtype": "",
				"sublen": 0
			},
			{
				"name": "list",
				"order": 1,
				"type": "kList",
				"subtype": "",
				"sublen": 0
			}
		]
	},
	{
		"name": "$origin",
		"ident": 5,
		"order": 6,
		"desc": "Returns: The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$origin.$assign",
		"ident": 6,
		"order": 7,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oQuantity",
				"sublen": 0,
				"param": 1,
				"desc": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$period",
		"ident": 7,
		"order": 8,
		"desc": "Returns: The length of time between sampling times, measured in milliseconds.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$period.$assign",
		"ident": 8,
		"order": 9,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kNumber",
				"subtype": "kFloatdp",
				"sublen": 0,
				"param": 1,
				"desc": "The length of time between sampling times, measured in milliseconds."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$factor",
		"ident": 9,
		"order": 10,
		"desc": "Returns: A correction factor that is applied to the sampled data points before they are added to the origin.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$factor.$assign",
		"ident": 10,
		"order": 11,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kNumber",
				"subtype": "kFloatdp",
				"sublen": 0,
				"param": 1,
				"desc": "A correction factor that is applied to the sampled data points before they are added to the origin."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$lowerLimit",
		"ident": 11,
		"order": 12,
		"desc": "Returns: The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$lowerLimit.$assign",
		"ident": 12,
		"order": 13,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kNumber",
				"subtype": "kFloatdp",
				"sublen": 0,
				"param": 1,
				"desc": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$upperLimit",
		"ident": 13,
		"order": 14,
		"desc": "Returns: The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$upperLimit.$assign",
		"ident": 14,
		"order": 15,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kNumber",
				"subtype": "kFloatdp",
				"sublen": 0,
				"param": 1,
				"desc": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$dimensions",
		"ident": 15,
		"order": 16,
		"desc": "Returns: The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$dimensions.$assign",
		"ident": 16,
		"order": 17,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kInteger",
				"subtype": "k32bitint",
				"sublen": 0,
				"param": 1,
				"desc": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$data",
		"ident": 17,
		"order": 18,
		"desc": "Returns: A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$data.$assign",
		"ident": 18,
		"order": 19,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
			}
		],
		"lvardefs": [

		]
	}
]
