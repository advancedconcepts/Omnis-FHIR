[
	{
		"name": "$metadata",
		"ident": 0,
		"order": 1,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$setupMetadata",
		"ident": 1,
		"order": 2,
		"pvardefs": [
			{
				"name": "pElements",
				"order": 1,
				"type": "kFieldreference",
				"subtype": 0,
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$construct",
		"ident": 2,
		"order": 3,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$copyFrom",
		"ident": 3,
		"order": 4,
		"pvardefs": [

		],
		"lvardefs": [
			{
				"name": "itemRef",
				"order": 2,
				"type": "kItemref",
				"subtype": "",
				"sublen": 0
			},
			{
				"name": "list",
				"order": 1,
				"type": "kList",
				"subtype": "",
				"sublen": 0
			}
		]
	},
	{
		"name": "$method",
		"ident": 4,
		"order": 5,
		"desc": "Returns: In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$method.$assign",
		"ident": 5,
		"order": 6,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$url",
		"ident": 6,
		"order": 7,
		"desc": "Returns: The URL for this entry, relative to the root (the address to which the request is posted).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$url.$assign",
		"ident": 7,
		"order": 8,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "The URL for this entry, relative to the root (the address to which the request is posted)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifNoneMatch",
		"ident": 8,
		"order": 9,
		"desc": "Returns: If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifNoneMatch.$assign",
		"ident": 9,
		"order": 10,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifModifiedSince",
		"ident": 10,
		"order": 11,
		"desc": "Returns: Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifModifiedSince.$assign",
		"ident": 11,
		"order": 12,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kDate",
				"subtype": "kDatetime",
				"sublen": 0,
				"param": 1,
				"desc": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifMatch",
		"ident": 12,
		"order": 13,
		"desc": "Returns: Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifMatch.$assign",
		"ident": 13,
		"order": 14,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency)."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifNoneExist",
		"ident": 14,
		"order": 15,
		"desc": "Returns: Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$ifNoneExist.$assign",
		"ident": 15,
		"order": 16,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not i"
			}
		],
		"lvardefs": [

		]
	}
]
