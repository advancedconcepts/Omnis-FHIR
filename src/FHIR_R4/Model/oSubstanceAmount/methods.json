[
	{
		"name": "$resourceType",
		"ident": 0,
		"order": 1,
		"desc": "Returns the FHIR type name for this instance",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$metadata",
		"ident": 1,
		"order": 2,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$setupMetadata",
		"ident": 2,
		"order": 3,
		"pvardefs": [
			{
				"name": "pElements",
				"order": 1,
				"type": "kFieldreference",
				"subtype": 0,
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$construct",
		"ident": 3,
		"order": 4,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$copyFrom",
		"ident": 4,
		"order": 5,
		"pvardefs": [

		],
		"lvardefs": [
			{
				"name": "itemRef",
				"order": 2,
				"type": "kItemref",
				"subtype": "",
				"sublen": 0
			},
			{
				"name": "list",
				"order": 1,
				"type": "kList",
				"subtype": "",
				"sublen": 0
			}
		]
	},
	{
		"name": "$amountType",
		"ident": 5,
		"order": 6,
		"desc": "Returns: Most elements that require a quantitative value will also have a field called amount type. Amount type should always be specified because the actual value of the amount is often dependent on it. EXAMPLE: In capturing the actual relative amounts of substances or molecular fragments it is essential to indicate whether the amount refers to a mole ratio or weight ratio. For any given element an effort should be made to use same the amount type for all related definitional elements.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$amountType.$assign",
		"ident": 6,
		"order": 7,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"param": 1,
				"desc": "Most elements that require a quantitative value will also have a field called amount type. Amount type should always be specified because the actual value of the amount is often dependent on it. EXAMPLE: In capturing the actual relative amounts of substan"
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$amountText",
		"ident": 7,
		"order": 8,
		"desc": "Returns: A textual comment on a numeric value.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$amountText.$assign",
		"ident": 8,
		"order": 9,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "A textual comment on a numeric value."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange",
		"ident": 9,
		"order": 10,
		"desc": "Returns: Reference range of possible or expected values.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange.$assign",
		"ident": 10,
		"order": 11,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oElement",
				"sublen": 0,
				"param": 1,
				"desc": "Reference range of possible or expected values."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange.lowLimit",
		"ident": 11,
		"order": 12,
		"desc": "Returns: Lower limit possible or expected.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange.lowLimit.$assign",
		"ident": 12,
		"order": 13,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oQuantity",
				"sublen": 0,
				"param": 1,
				"desc": "Lower limit possible or expected."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange.highLimit",
		"ident": 13,
		"order": 14,
		"desc": "Returns: Upper limit possible or expected.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceRange.highLimit.$assign",
		"ident": 14,
		"order": 15,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oQuantity",
				"sublen": 0,
				"param": 1,
				"desc": "Upper limit possible or expected."
			}
		],
		"lvardefs": [

		]
	}
]
