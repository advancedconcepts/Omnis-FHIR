[
	{
		"name": "$metadata",
		"ident": 0,
		"order": 1,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$setupMetadata",
		"ident": 1,
		"order": 2,
		"pvardefs": [
			{
				"name": "pElements",
				"order": 1,
				"type": "kFieldreference",
				"subtype": 0,
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$construct",
		"ident": 2,
		"order": 3,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$copyFrom",
		"ident": 3,
		"order": 4,
		"pvardefs": [

		],
		"lvardefs": [
			{
				"name": "itemRef",
				"order": 2,
				"type": "kItemref",
				"subtype": "",
				"sublen": 0
			},
			{
				"name": "list",
				"order": 1,
				"type": "kList",
				"subtype": "",
				"sublen": 0
			}
		]
	},
	{
		"name": "$chromosome",
		"ident": 4,
		"order": 5,
		"desc": "Returns: Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$chromosome.$assign",
		"ident": 5,
		"order": 6,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"param": 1,
				"desc": "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340))."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$genomeBuild",
		"ident": 6,
		"order": 7,
		"desc": "Returns: The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$genomeBuild.$assign",
		"ident": 7,
		"order": 8,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqId",
		"ident": 8,
		"order": 9,
		"desc": "Returns: Reference identifier of reference sequence submitted to NCBI. It must match the type in the Sequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequences.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqId.$assign",
		"ident": 9,
		"order": 10,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"param": 1,
				"desc": "Reference identifier of reference sequence submitted to NCBI. It must match the type in the Sequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequence"
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqPointer",
		"ident": 10,
		"order": 11,
		"desc": "Returns: A Pointer to another Sequence entity as reference sequence.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqPointer.$assign",
		"ident": 11,
		"order": 12,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oReference",
				"sublen": 0,
				"param": 1,
				"desc": "A Pointer to another Sequence entity as reference sequence."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqString",
		"ident": 12,
		"order": 13,
		"desc": "Returns: A string like \"ACGT\".",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$referenceSeqString.$assign",
		"ident": 13,
		"order": 14,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "A string like \"ACGT\"."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$strand",
		"ident": 14,
		"order": 15,
		"desc": "Returns: Directionality of DNA sequence. Available values are \"1\" for the plus strand (5' to 3')/Watson/Sense/positive  and \"-1\" for the minus strand(3' to 5')/Crick/Antisense/negative.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$strand.$assign",
		"ident": 15,
		"order": 16,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kInteger",
				"subtype": "k32bitint",
				"sublen": 0,
				"param": 1,
				"desc": "Directionality of DNA sequence. Available values are \"1\" for the plus strand (5' to 3')/Watson/Sense/positive  and \"-1\" for the minus strand(3' to 5')/Crick/Antisense/negative."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$windowStart",
		"ident": 16,
		"order": 17,
		"desc": "Returns: Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$windowStart.$assign",
		"ident": 17,
		"order": 18,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kInteger",
				"subtype": "k32bitint",
				"sublen": 0,
				"param": 1,
				"desc": "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$windowEnd",
		"ident": 18,
		"order": 19,
		"desc": "Returns: End position of the window on the reference sequence. If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$windowEnd.$assign",
		"ident": 19,
		"order": 20,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kInteger",
				"subtype": "k32bitint",
				"sublen": 0,
				"param": 1,
				"desc": "End position of the window on the reference sequence. If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position."
			}
		],
		"lvardefs": [

		]
	}
]
