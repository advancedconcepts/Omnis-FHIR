[
	{
		"name": "$metadata",
		"ident": 0,
		"order": 1,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$setupMetadata",
		"ident": 1,
		"order": 2,
		"pvardefs": [
			{
				"name": "pElements",
				"order": 1,
				"type": "kFieldreference",
				"subtype": 0,
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$construct",
		"ident": 2,
		"order": 3,
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$copyFrom",
		"ident": 3,
		"order": 4,
		"pvardefs": [

		],
		"lvardefs": [
			{
				"name": "itemRef",
				"order": 2,
				"type": "kItemref",
				"subtype": "",
				"sublen": 0
			},
			{
				"name": "list",
				"order": 1,
				"type": "kList",
				"subtype": "",
				"sublen": 0
			}
		]
	},
	{
		"name": "$role",
		"ident": 4,
		"order": 5,
		"desc": "Returns: The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$addrole",
		"ident": 5,
		"order": 6,
		"desc": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.",
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [
			{
				"name": "objRef",
				"order": 2,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"desc": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context."
			}
		]
	},
	{
		"name": "$reference",
		"ident": 6,
		"order": 7,
		"desc": "Returns: Direct reference to a resource that identifies the agent.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$reference.$assign",
		"ident": 7,
		"order": 8,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oReference",
				"sublen": 0,
				"param": 1,
				"desc": "Direct reference to a resource that identifies the agent."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$userId",
		"ident": 8,
		"order": 9,
		"desc": "Returns: Unique identifier for the user actively participating in the event.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$userId.$assign",
		"ident": 9,
		"order": 10,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oIdentifier",
				"sublen": 0,
				"param": 1,
				"desc": "Unique identifier for the user actively participating in the event."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$altId",
		"ident": 10,
		"order": 11,
		"desc": "Returns: Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$altId.$assign",
		"ident": 11,
		"order": 12,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$::name",
		"ident": 12,
		"order": 13,
		"desc": "Returns: Human-meaningful name for the agent.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$::name.$assign",
		"ident": 13,
		"order": 14,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "Human-meaningful name for the agent."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$requestor",
		"ident": 14,
		"order": 15,
		"desc": "Returns: Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$requestor.$assign",
		"ident": 15,
		"order": 16,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kBoolean",
				"subtype": 0,
				"sublen": 0,
				"param": 1,
				"desc": "Indicator that the user is or is not the requestor, or initiator, for the event being audited."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$location",
		"ident": 16,
		"order": 17,
		"desc": "Returns: Where the event occurred.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$location.$assign",
		"ident": 17,
		"order": 18,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oReference",
				"sublen": 0,
				"param": 1,
				"desc": "Where the event occurred."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$policy",
		"ident": 18,
		"order": 19,
		"desc": "Returns: The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$addpolicy",
		"ident": 19,
		"order": 20,
		"desc": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kCharacter",
				"subtype": "kSimplechar",
				"sublen": 100000000,
				"param": 1,
				"desc": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$media",
		"ident": 20,
		"order": 21,
		"desc": "Returns: Type of media involved. Used when the event is about exporting/importing onto media.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$media.$assign",
		"ident": 21,
		"order": 22,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCoding",
				"sublen": 0,
				"param": 1,
				"desc": "Type of media involved. Used when the event is about exporting/importing onto media."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$network",
		"ident": 22,
		"order": 23,
		"desc": "Returns: Logical network location for application activity, if the activity has a network location.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$network.$assign",
		"ident": 23,
		"order": 24,
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oAuditEventAgentNetwork",
				"sublen": 0,
				"param": 1,
				"desc": "Logical network location for application activity, if the activity has a network location."
			}
		],
		"lvardefs": [

		]
	},
	{
		"name": "$purposeOfUse",
		"ident": 24,
		"order": 25,
		"desc": "Returns: The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
		"pvardefs": [

		],
		"lvardefs": [

		]
	},
	{
		"name": "$addpurposeOfUse",
		"ident": 25,
		"order": 26,
		"desc": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
		"pvardefs": [
			{
				"name": "pValue",
				"order": 1,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"param": 1
			}
		],
		"lvardefs": [
			{
				"name": "objRef",
				"order": 2,
				"type": "kObjectref",
				"subtype": "oCodeableConcept",
				"sublen": 0,
				"desc": "The reason (purpose of use), specific to this agent, that was used during the event being recorded."
			}
		]
	}
]
